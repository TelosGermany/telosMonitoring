#snapshot download file tar.gz
snapshot_download="$(date +%Y-%m-%d)-00-00-05.tar.gz"

#snapshot url
snapshot_url="https://snapshot-adress"

# download snapshot directory
snapshot_download_dir=/directory/snapshots

# location extracted snapshot file
dir_extr_snapshot_file=directory_extract/snapshots

# script for restart nodeos
nodeos_control=/directory/cnod

# variable for nodeos pid
nodeos_pid=$(pgrep nodeos)

# minutes wait before checking blocks
time_wait=5

# definition which ports checked, defined in endpoint.txt
p2p_port="9876"
https_port="443"
http_port="8888"
portal_port="3000"

# api
api=https://adress.apinode

# initial endpoint status
endpoint_status=0

# name of network interface
network_interface="ens5"

# request chain info
chain_request="/v1/chain/get_info"

# directory data
nodeos_data=/directory/data

# directory telosportal
telos_portal=

# directory monitor 
dir_mon=/directory/monitor

# directory rules
rules_dir=/directory/monitor/rules

# location error definition file
def_error=/directory/monitor/def_error.txt

# location error log file
error_log=/directory/monitor/error.log

#location result log file
result_log=/directory/monitor/result.log

# location stdout.txt
stdout_log=/directory/data/stdout.txt

# location log file
stderr_log=/directory/data/stderr.txt

# location endpoint file
endpoint=/directory/monitor/endpoint.txt

# backup file
backup_file=backup_active.txt

# break file
break_file=break.txt

# error file
restart_count_file=restart_count.txt

# initial lastreceive_stderr
lastreceive_stderr=""

# initial break count
break_count=0

# minimum size for stderr 
stderr_size=125000

# count of minutes and value for received blocks
rec_sec=300
count_block=400

# status incoming blocks
incoming_blocks="Received"

# bp_name
bp_name="bpname"

# status producer
status_producer="INACTIVE"

# file for sed
sed_file=received_blocks

# s3 bucket
bucket_name=bucket_name

# s3 backup target 
target=s3://s3name

# s3 backup path
store_path=

# backup_path_temp
backup_path_temp=/directory/backup/copy_nodeos_state

# backup logfile
backup_log=/directory/backup/backup.log

# backup type
backup_type="full"

# current date
d=$(date +%y-%m-%d)

# minutes to check if system produches blocks
prodcheck_min=30

# restore logfile
restore_log=/directory/backup/restore.log

# backup from days ago
restore_days_ago=0

